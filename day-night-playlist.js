(()=>{"use strict";var t={876:function(t,e,l){var i=this&&this.__awaiter||function(t,e,l,i){return new(l||(l=Promise))((function(n,a){function o(t){try{d(i.next(t))}catch(t){a(t)}}function s(t){try{d(i.throw(t))}catch(t){a(t)}}function d(t){var e;t.done?n(t.value):(e=t.value,e instanceof l?e:new l((function(t){t(e)}))).then(o,s)}d((i=i.apply(t,e||[])).next())}))};Object.defineProperty(e,"__esModule",{value:!0}),e.dayNightPlaylist=void 0;const n=l(894),a=l(494),o=l(478);function s(t,e){return i(this,void 0,void 0,(function*(){for(let e=1;e>=0;e-=.1)a.pluginUtils.updatePlaylistVolume(t,e),yield new Promise((t=>setTimeout(t,300)));yield t.stopAll(),yield e.playAll();for(let t=0;t<=1;t+=.1)a.pluginUtils.updatePlaylistVolume(e,t),yield new Promise((t=>setTimeout(t,300)))}))}function d(t){const e=game.playlists.find((t=>t.playing));return e?t!=e.getFlag(`${o.MODULE_CONFIG.id}`,"is-day"):(console.log("No active playlist is currently playing."),!0)}e.dayNightPlaylist=()=>{Hooks.on("renderSceneConfig",((t,e)=>{!function(t,e){const l=a.pluginUtils.getPlaylistsByDayOrNight(!0),i=a.pluginUtils.getPlaylistsByDayOrNight(!1),n=l.map((e=>`<option value="${e.id}" \n${t.object.getFlag(`${o.MODULE_CONFIG.id}`,"scene-day-playlist")===e.id?"selected":""}\n>${e.name}</option>`)).join(""),s=i.map((e=>`<option value="${e.id}"\n${t.object.getFlag(`${o.MODULE_CONFIG.id}`,"scene-night-playlist")===e.id?"selected":""}\n>${e.name}</option>`)).join(""),d=`\n    <div class="form-group">\n        <label for="flags.${o.MODULE_CONFIG.id}.scene-day-playlist">Scene Day Playlist</label>\n        <select name="flags.${o.MODULE_CONFIG.id}.scene-day-playlist">\n            <option value="option" ${"option"===t.object.getFlag(`${o.MODULE_CONFIG.id}`,"scene-day-playlist")?"selected":""}></option>\n            ${n}\n        </select>\n    </div>\n    <div class="form-group">\n        <label for="flags.${o.MODULE_CONFIG.id}.scene-night-playlist">Scene Night Playlist</label>\n        <select name="flags.${o.MODULE_CONFIG.id}.scene-night-playlist">\n            <option value="option" ${"option"===t.object.getFlag(`${o.MODULE_CONFIG.id}`,"scene-day-playlist")?"selected":""}></option>\n            ${s}\n        </select>\n    </div>\n    `;e.find('select[name="playlist"]').closest(".form-group").after(d)}(t,e)})),Hooks.on("renderPlaylistConfig",((t,e)=>i(void 0,void 0,void 0,(function*(){!function(t,e){const l=t.object.getFlag(`${o.MODULE_CONFIG.id}`,"is-day")?"checked":"",i=`\n    <div class="form-group">\n        <label>Is day playlist?</label>\n       \n            <input type="checkbox" name="flags.${o.MODULE_CONFIG.id}.is-day" ${l}>\n        \n    </div>\n    `;0===$(e).find(".day-night-config").length&&e.find("div.form-group").last().after(i)}(t,e)})))),Hooks.on("canvasReady",(()=>{var t,e,l;const i=null===(t=game.scenes)||void 0===t?void 0:t.active,s=null==i?void 0:i.toObject().darkness,d=a.pluginUtils.isDayByDarknessLevel(s),r=null==i?void 0:i.getFlag(`${o.MODULE_CONFIG.id}`,"scene-day-playlist"),g=null==i?void 0:i.getFlag(`${o.MODULE_CONFIG.id}`,"scene-night-playlist");let y=d?r:g;const c=null===(e=game.playlists)||void 0===e?void 0:e.get(y);c?(null===(l=game.playlists)||void 0===l||l.forEach((t=>{t.playing&&(t.stopAll(),(0,n.log)("Stopping playlist"))})),c.playAll(),(0,n.log)("playing scene's playlist")):(0,n.log)("No playlist set for the current time of day.")})),Hooks.on("updateScene",(t=>{var e,l,i;const d=t.getFlag(`${o.MODULE_CONFIG.id}`,"scene-day-playlist"),r=t.getFlag(`${o.MODULE_CONFIG.id}`,"scene-night-playlist"),g=null===(e=game.playlists)||void 0===e?void 0:e.get(d),y=null===(l=game.playlists)||void 0===l?void 0:l.get(r),c=null===(i=game.playlists)||void 0===i?void 0:i.find((t=>t.playing)),p=t.toObject().darkness;c&&g&&y?a.pluginUtils.isDayByDarknessLevel(p)&&c.id==r?((0,n.log)("changing the scene's playlist from night to day"),s(c,g)):a.pluginUtils.isDayByDarknessLevel(p)||c.id!=d||((0,n.log)("changing the scene's playlist from day to night"),s(c,y)):(0,n.log)("Cant change the playlist!")})),Hooks.on("updateWorldTime",(()=>{const t=a.pluginUtils.getPlaylistsByDayOrNight(!0),e=a.pluginUtils.getPlaylistsByDayOrNight(!1),l=Math.floor(Math.random()*t.length),i=Math.floor(Math.random()*e.length),o=t[l],r=e[i];a.pluginUtils.isDayByWorldTime()?((0,n.log)("It's day time in the game!"),d(!0)&&((0,n.log)("Changing the playlist from night to day"),s(r,o))):((0,n.log)("It's night time in the game!"),d(!1)&&((0,n.log)("Changing the playlist from day to night"),s(o,r)))}))}},494:(t,e,l)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.pluginUtils=void 0;const i=l(478);e.pluginUtils=class{static isDayByWorldTime(){const t=game.time.worldTime/3600%24;return!(t>=18||t<6)}static isDayByDarknessLevel(t){return null!=t&&t<=.5}static updatePlaylistVolume(t,e){t.sounds.forEach((t=>{t.update({volume:e})}))}static getPlaylistsByDayOrNight(t){return game.playlists.filter((e=>e.getFlag(`${i.MODULE_CONFIG.id}`,"is-day")===t))}}},478:function(t,e,l){var i=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0}),e.MODULE_CONFIG=void 0;const n=i(l(606));e.MODULE_CONFIG={id:n.default.id,title:n.default.title,authors:n.default.authors.map((t=>t.name)),version:n.default.version}},894:(t,e,l)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.error=e.warn=e.log=void 0;const i=l(478);e.log=t=>{console.log(`[${i.MODULE_CONFIG.title}] | ${t}`)},e.warn=t=>{console.warn(`[${i.MODULE_CONFIG.title}] | ${t}`)},e.error=t=>{console.error(`[${i.MODULE_CONFIG.title}] | ${t}`)}},606:t=>{t.exports=JSON.parse('{"id":"dungeons-lab-day-night-playlist","title":"Dungeons LAB Day Night Playlist","version":"1.0.0","compatibility":{"minimum":"11","verified":"12"},"scripts":["day-night-playlist.js"],"relationships":{"requires":[{"id":"smalltime","type":"module"}]},"authors":[{"name":"Dungeons LAB","url":"https://www.patreon.com/Dungeons_LAB","flags":{}}],"url":"https://www.patreon.com/Dungeons_LAB","description":""}')}},e={};function l(i){var n=e[i];if(void 0!==n)return n.exports;var a=e[i]={exports:{}};return t[i].call(a.exports,a,a.exports,l),a.exports}(()=>{const t=l(876);Hooks.on("ready",(()=>{(0,t.dayNightPlaylist)()}))})()})();